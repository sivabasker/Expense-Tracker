{"version":3,"sources":["context/AppReducer.tsx","context/GlobalState.tsx","components/AddTransaction.tsx","components/Balance.tsx","components/Header.tsx","components/IncomeExpense.tsx","components/Transaction.tsx","components/TransactionList.tsx","App.tsx","index.tsx"],"names":["state","action","type","transactions","payload","filter","transaction","id","initialState","addTransaction","deleteTransaction","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","uuid","console","log","className","htmlFor","onChange","target","placeholder","parseInt","Balance","balance","map","trans","reduce","acc","item","toFixed","Header","IncomeExpense","income","expense","Math","abs","Transaction","sign","onClick","TransactionList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAMe,WAACA,EAAeC,GAC3B,OAAQA,EAAOC,MACX,IAAK,kBACD,OAAO,2BACAF,GADP,IAEIG,aAAa,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,iBAEhD,IAAK,qBACD,OAAO,2BACAH,GADP,IAEIG,aAAcH,EAAMG,aAAaE,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAON,EAAOG,aAEzF,QACI,OAAOJ,I,OCTbQ,EAAmC,CACrCL,aAAc,GAMdM,eAAgB,aAChBC,kBAAmB,cASVC,EAAgBC,wBAAkCJ,GAOlDK,EAAiB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAC7B,EAA0BC,qBAAWC,EAAYR,GAAjD,mBAAOR,EAAP,KAAciB,EAAd,KAiBA,OACI,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3BhB,aAAcH,EAAMG,aACpBO,kBAjBR,SAA2BH,GACvB,OAAOU,EAAS,CACZf,KAAM,qBACNE,QAASG,KAeTE,eAXR,SAAwBH,GACpB,OAAOW,EAAS,CACZf,KAAM,kBACNE,QAASE,MAKb,SAKKQ,K,QCtDAM,EAAiB,WAC1B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACQhB,EAAmBiB,qBAAWf,GAA9BF,eAYR,OACI,qCACI,qDACA,uBAAMF,GAAG,OAAOoB,SAAU,SAACC,GAAD,OAdjB,SAACA,GACdA,EAAEC,iBACF,IAAIC,EAAkC,CAClCvB,GAAIwB,cACJT,OACAE,QAASA,GAEbQ,QAAQC,IAAIH,GACZrB,EAAeqB,GAMsBH,CAASC,IAA1C,UACI,sBAAKM,UAAU,eAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,uBAAOjC,KAAK,OAAOiB,MAAOG,EAAMc,SAAU,SAACR,GAAD,OAAOL,EAAQK,EAAES,OAAOlB,QAAQmB,YAAY,qBAE1F,sBAAKJ,UAAU,eAAf,UACI,wBAAOC,QAAQ,SAAf,oBAA+B,uBAA/B,6CAGA,uBAAOjC,KAAK,SAASiB,MAAOK,EAAQY,SAAU,SAACR,GAAD,OAAOH,EAAUc,SAASX,EAAES,OAAOlB,SAASmB,YAAY,uBAE1G,wBAAQJ,UAAU,MAAlB,oCC/BHM,EAAU,WACnB,IACIC,EADqBf,qBAAWf,GAA5BR,aACmBuC,KAAI,SAAAC,GAAK,OAAIA,EAAMnB,UAAQoB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GACtG,OACI,qCACI,iDACA,mCAAON,SCNNO,EAAS,WAClB,OACI,kDCAKC,EAAgB,WACzB,IAAQ9C,EAAiBuB,qBAAWf,GAA5BR,aACF+C,EAAS/C,EACVuC,KAAI,SAAApC,GAAW,OAAIA,EAAYkB,UAC/BnB,QAAO,SAAAsC,GAAK,OAAIA,EAAQ,KAAGC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAC1EI,EAAUhD,EACXuC,KAAI,SAAApC,GAAW,OAAIA,EAAYkB,UAC/BnB,QAAO,SAAAsC,GAAK,OAAIA,EAAQ,KAAGC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAChF,OACI,mCACI,sBAAKb,UAAU,oBAAf,UACI,gCACI,wCACA,oBAAGA,UAAU,aAAb,cAA4BgB,QAEhC,gCACI,yCACA,oBAAGhB,UAAU,cAAb,cAA6BkB,KAAKC,IAAId,SAASY,gBCftDG,EAAc,SAAC,GAAuC,IAArChD,EAAoC,EAApCA,YAClBI,EAAsBgB,qBAAWf,GAAjCD,kBACF6C,EAAOjD,EAAYkB,OAAS,EAAI,IAAM,IAC5C,OACI,qBAAIU,UAAW5B,EAAYkB,OAAS,EAAI,QAAU,OAAlD,UACKlB,EAAYgB,KADjB,IACuB,iCAAOiC,EAAP,IAAcH,KAAKC,IAAI/C,EAAYkB,WACtD,wBAAQU,UAAU,aAAasB,QAAS,kBAAM9C,EAAkBJ,EAAYC,KAA5E,mBCTCkD,EAAkB,WAC3B,IAAQtD,EAAiBuB,qBAAWf,GAA5BR,aACR,OAAQ,qCACJ,yCACA,oBAAI+B,UAAU,OAAd,SAEQ/B,EAAauC,KAAI,SAAApC,GAAW,OAAI,cAAC,EAAD,CAAkCA,YAAaA,GAA7BA,EAAYC,aCa/DmD,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKxB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCXRyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a71736e.chunk.js","sourcesContent":["import { transactionType } from './GlobalState';\r\n\r\ninterface IState {\r\n    transactions: transactionType[];\r\n}\r\n\r\nexport default (state: IState, action: { type: any; payload: any }) => {\r\n    switch (action.type) {\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, ReactNode, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport type transactionType = {\r\n    id: string;\r\n    text: string;\r\n    amount: number\r\n};\r\n\r\nconst initialState: GlobalContextValue = {\r\n    transactions: [\r\n        // { id: uuid(), text: 'Flower', amount: -20 },\r\n        // { id: uuid(), text: 'Salary', amount: 300 },\r\n        // { id: uuid(), text: 'Book', amount: -10 },\r\n        // { id: uuid(), text: 'Camera', amount: 150 }\r\n    ],\r\n    addTransaction: () => { },\r\n    deleteTransaction: () => { }\r\n};\r\n\r\ninterface GlobalContextValue {\r\n    transactions: transactionType[],\r\n    deleteTransaction: (id: string) => void;\r\n    addTransaction: (transaction: transactionType) => void;\r\n}\r\n// create context\r\nexport const GlobalContext = createContext<GlobalContextValue>(initialState);\r\n\r\ninterface GlobalProviderProps {\r\n    children: ReactNode[]\r\n}\r\n// provide components\r\n\r\nexport const GlobalProvider = ({ children }: GlobalProviderProps) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // dispatch \r\n    function deleteTransaction(id: string) {\r\n        return dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction: transactionType) {\r\n        return dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext, transactionType } from '../context/GlobalState';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        var newTransaction: transactionType = {\r\n            id: uuid(),\r\n            text,\r\n            amount: +amount\r\n        };\r\n        console.log(newTransaction);\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form id=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(parseInt(e.target.value))} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let balance = transactions.map(trans => trans.amount).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>  Your Balance </h4>\r\n            <h1 >${balance}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const income = transactions\r\n        .map(transaction => transaction.amount)\r\n        .filter(trans => trans > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = transactions\r\n        .map(transaction => transaction.amount)\r\n        .filter(trans => trans < 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Income</h4>\r\n                    <p className=\"money plus\">${income}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Expense</h4>\r\n                    <p className=\"money minus\">${Math.abs(parseInt(expense))}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext, transactionType } from './../context/GlobalState';\r\n\r\ninterface TransactionProps {\r\n    transaction: transactionType\r\n}\r\nexport const Transaction = ({ transaction }: TransactionProps) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction';\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    return (<>\r\n        <h3>History</h3>\r\n        <ul className=\"list\">\r\n            {\r\n                transactions.map(transaction => <Transaction key={transaction.id} transaction={transaction} />)\r\n            }\r\n\r\n        </ul>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { AddTransaction } from './components/AddTransaction';\nimport { Balance } from './components/Balance';\nimport { Header } from './components/Header';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}