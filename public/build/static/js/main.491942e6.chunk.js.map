{"version":3,"sources":["context/AppReducer.tsx","context/GlobalState.tsx","components/AddTransaction.tsx","components/Balance.tsx","components/Header.tsx","components/IncomeExpense.tsx","components/Transaction.tsx","components/TransactionList.tsx","App.tsx","index.tsx"],"names":["state","action","type","loading","error","transactions","payload","filter","transaction","_id","initialState","getTranactions","addTransaction","deleteTransaction","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","ObjectID","toString","className","htmlFor","onChange","target","placeholder","parseInt","Balance","balance","map","trans","reduce","acc","item","toFixed","Header","IncomeExpense","income","expense","Math","abs","Transaction","sign","onClick","TransactionList","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.491942e6.chunk.js","sourcesContent":["import { transactionType } from './GlobalState';\r\n\r\ninterface IState {\r\n    transactions: transactionType[];\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\nexport default (state: IState, action: { type: any; payload: any }) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: \"\",\r\n                transactions: action.payload\r\n            };\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, ReactNode, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nexport type transactionType = {\r\n    _id: string;\r\n    text: string;\r\n    amount: number;\r\n};\r\n\r\nconst initialState: GlobalContextValue = {\r\n    transactions: [],\r\n    loading: true,\r\n    error: \"\",\r\n    getTranactions: () => { },\r\n    addTransaction: () => { },\r\n    deleteTransaction: () => { }\r\n};\r\n\r\ninterface GlobalContextValue {\r\n    transactions: transactionType[];\r\n    loading: boolean;\r\n    error: string;\r\n    getTranactions: () => void;\r\n    deleteTransaction: (id: string) => void;\r\n    addTransaction: (transaction: transactionType) => void;\r\n}\r\n// create context\r\nexport const GlobalContext = createContext<GlobalContextValue>(initialState);\r\n\r\ninterface GlobalProviderProps {\r\n    children: ReactNode[]\r\n}\r\n// provide components\r\n\r\nexport const GlobalProvider = ({ children }: GlobalProviderProps) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    async function getTranactions() {\r\n        try {\r\n            const res = await axios.get('api/v1/transactions')\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        }\r\n        catch (err: any) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    // dispatch \r\n    async function deleteTransaction(id: string) {\r\n        try {\r\n            await axios.delete(`api/v1/transactions/${id}`);\r\n            return dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        }\r\n        catch (err: any) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction: transactionType) {\r\n        var config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        try {\r\n            const res = await axios.post('api/v1/transactions', transaction, config);\r\n            return dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        }\r\n        catch (err: any) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            loading: state.loading,\r\n            error: state.error,\r\n            getTranactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext, transactionType } from '../context/GlobalState';\r\nimport { ObjectID } from 'bson';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        var newTransaction: transactionType = {\r\n            _id: (new ObjectID()).toString(),\r\n            text,\r\n            amount: +amount\r\n        };\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form id=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(parseInt(e.target.value))} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let balance = transactions.map(trans => trans.amount).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>  Your Balance </h4>\r\n            <h1 >${balance}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const income = transactions\r\n        .map(transaction => transaction.amount)\r\n        .filter(trans => trans > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = transactions\r\n        .map(transaction => transaction.amount)\r\n        .filter(trans => trans < 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Income</h4>\r\n                    <p className=\"money plus\">${income}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Expense</h4>\r\n                    <p className=\"money minus\">${Math.abs(parseInt(expense))}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext, transactionType } from './../context/GlobalState';\r\n\r\ninterface TransactionProps {\r\n    transaction: transactionType\r\n}\r\nexport const Transaction = ({ transaction }: TransactionProps) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction';\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions, getTranactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTranactions();\r\n    }, []);\r\n\r\n    return (<>\r\n        <h3>History</h3>\r\n        <ul className=\"list\">\r\n            {\r\n                transactions.map(transaction => <Transaction key={transaction._id} transaction={transaction} />)\r\n            }\r\n\r\n        </ul>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { AddTransaction } from './components/AddTransaction';\nimport { Balance } from './components/Balance';\nimport { Header } from './components/Header';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}